.tmpl:deploy: &tmpl_deploy
  image: node:12
  artifacts:
    reports:
      dotenv: deploy.env
  script:
    - yarn
    - node_modules/.bin/sls deploy --verbose
    - echo "API_URL=$(node_modules/.bin/sls info --verbose | grep -w "CloudFrontDistributionDomain" | cut -d ' ' -f2)" >> deploy.env
  stage: deploy

.tmpl:deploy_remove: &tmpl_deploy_remove
  image: node:12
  script:
    - git checkout $CI_COMMIT_SHA
    - yarn
    - node_modules/.bin/sls remove --verbose
  stage: deploy
  variables:
    GIT_STRATEGY: 'fetch'
    GIT_CHECKOUT: 'false'
    SLS_STAGE: $CI_COMMIT_REF_SLUG

image: node:12
stages:
  # - check
  # - build
  # - test
  - deploy

# check:install:
#   script:
#     - yarn install --immutable --immutable-cache
#   stage: check
# check:constraints:
#   script:
#     - yarn constraints
#   stage: check

# check:format:
#   script:
#     - yarn run lint:format
#   stage: check

# build:
#   script:
#     - yarn run build
#   artifacts:
#     paths:
#       - packages/*/build
#   stage: build

# test:
#   script:
#     - yarn run test --coverage
#   artifacts:
#     paths:
#       - coverage
#   stage: test

sls:deploy:master:
  <<: *tmpl_deploy
  environment:
    name: production
    url: $API_URL
  only:
    - master
  variables:
    SLS_STAGE: production

sls:deploy:branch:
  <<: *tmpl_deploy
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: $API_URL
    on_stop: sls:deploy:branch_remove
  only:
    - branches
  variables:
    SLS_STAGE: $CI_COMMIT_REF_SLUG

sls:deploy:branch_remove:
  <<: *tmpl_deploy_remove
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  only:
    - branches
  when: manual
